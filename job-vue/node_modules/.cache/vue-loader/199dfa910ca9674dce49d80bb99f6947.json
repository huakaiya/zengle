{"remainingRequest":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\src\\views\\Charts\\Dash1\\charts\\radarPart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\src\\views\\Charts\\Dash1\\charts\\radarPart.vue","mtime":1710938895247},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldF9hbGxfdHlwZXMgfSBmcm9tICJAL2FwaS9qb2IiOwppbXBvcnQgeyBkYXNoMyB9IGZyb20gIkAvYXBpL2pvYiI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJycsCiAgcHJvcHM6IHsKICAgIHNlbGVjdFJhbmdlRGF0ZTogQXJyYXksCiAgICBfd2lkdGg6IE51bWJlcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjdGl2ZU5hbWU6ICcwJywKICAgICAgdHlwZXM6IFtdLAogICAgICBjb250ZW50czogW10sCiAgICAgIHdvcmRzOiBbXSwKICAgICAgZGF0YTogW10sCiAgICAgIGNoYXJ0T3B0aW9uOiB7fSwKICAgICAgbWFza0ltYWdlOiBuZXcgSW1hZ2UoKSwKICAgIH0KICB9LAogIGFzeW5jIG1vdW50ZWQoKSB7CiAgICAvLyBhd2FpdCBnZXRXb3JkQ3V0KCkudGhlbihyZXMgPT4gewogICAgLy8gICB0aGlzLndvcmRzID0gcmVzLmRhdGEuZGF0YQogICAgLy8gfSksCiAgICAvLyDojrflj5bmiYDmnInliIbnsbvlkI3np7AKICAgIGF3YWl0IHRoaXMuZ2V0QWxsVHlwZXMoKTsKICAgIC8vIOm7mOiupOWKoOi9veesrOS4gOS4quWIhuexu+eahOaVsOaNrgogICAgaWYgKHRoaXMudHlwZXMubGVuZ3RoID4gMCkgewogICAgICBhd2FpdCB0aGlzLmZldGNoRGF0YSh0aGlzLnR5cGVzWzBdKTsKICAgIH0KCiAgICB0aGlzLm1hc2tJbWFnZS5zcmMgPSByZXF1aXJlKCdAL2Fzc2V0cy96bC5wbmcnKQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdENoYXJ0KCkgewogICAgICB0aGlzLmxvYWREYXRhKCkKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5jaGFydE9wdGlvbiA9IHRoaXMuYnVpbGRDaGFydE9wdGlvbigpOwogICAgICB9LCA1MDApCiAgICB9LAogICAgbG9hZERhdGEoKSB7CiAgICAgIHRoaXMuZGF0YSA9IFtdCiAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcy53b3JkcykgewogICAgICAgIHRoaXMuZGF0YS5wdXNoKHsKICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICB2YWx1ZTogTWF0aC5zcXJ0KHRoaXMud29yZHNbbmFtZV0pCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIGhhbmRsZUNsaWNrKCkgewogICAgICB0aGlzLmZldGNoRGF0YSh0aGlzLnR5cGVzW3RoaXMuYWN0aXZlTmFtZV0pCiAgICB9LAogICAgYXN5bmMgZ2V0QWxsVHlwZXMoKSB7CiAgICAgIGF3YWl0IGdldF9hbGxfdHlwZXMoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy50eXBlcyA9IHJlcy5kYXRhLnR5cGVzOwogICAgICB9KQogICAgfSwKICAgIGFzeW5jIGZldGNoRGF0YSh0eXBlTmFtZSkgewogICAgICAvLyDmoLnmja7pgInmi6nnmoTliIbnsbvlkI3np7DosIPnlKjlkI7lj7Dmlrnms5Xojrflj5bmlbDmja4KICAgICAgYXdhaXQgZGFzaDModHlwZU5hbWUpLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgdGhpcy5jb250ZW50cyA9IGRhdGEuY29udGVudHM7CiAgICAgICAgZGF0YS5jb250ZW50cy5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgICB0aGlzLndvcmRzW2l0ZW1dID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwKSArIDEKICAgICAgICB9KQogICAgICB9KQogICAgICBhd2FpdCB0aGlzLmluaXRDaGFydCgpCiAgICB9LAogICAgYnVpbGRDaGFydE9wdGlvbigpIHsKICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG1hc2tJbWFnZTogdGhpcy5tYXNrSW1hZ2UsCiAgICAgICAgICB0eXBlOiAnd29yZENsb3VkJywKICAgICAgICAgIGdyaWRTaXplOiAyLAogICAgICAgICAgc2l6ZVJhbmdlOiBbMTAsIDUwXSwKICAgICAgICAgIHJvdGF0aW9uUmFuZ2U6IFstOTAsIDkwXSwKICAgICAgICAgIHNoYXBlOiAncGVudGFnb24nLAogICAgICAgICAgd2lkdGg6IDkwMCwKICAgICAgICAgIGhlaWdodDogOTAwLAogICAgICAgICAgZHJhd091dE9mQm91bmQ6IGZhbHNlLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIHRleHRCb3JkZXJDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsMC4zKScsCiAgICAgICAgICAgICAgdGV4dEJvcmRlcldpZHRoOiAxLAogICAgICAgICAgICAgIGNvbG9yOiAoKSA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3JnYignICsgWwogICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxNjApLAogICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxNjApLAogICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxNjApCiAgICAgICAgICAgICAgICBdLmpvaW4oJywnKSArICcpJzsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgZm9udFNpemU6IDIwLAogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgyNTUsMjU1LDI1NSwgLjEpJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogdGhpcy5kYXRhCiAgICAgICAgfV0KICAgICAgfTsKCiAgICAgIHJldHVybiBvcHRpb247CiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["radarPart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"radarPart.vue","sourceRoot":"src/views/Charts/Dash1/charts","sourcesContent":["<template>\n  <div class=\"main\">\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n      <el-tab-pane v-for=\"(item, idx) in types\" :key=\"idx\" :label=\"item\" :name=\"idx + ''\"></el-tab-pane>\n    </el-tabs>\n    <div class=\"content-wrap\">\n      <div class=\"mask\"></div>\n      <!-- <ul class=\"type-child-list\">\n        <li class=\"typeItem\" v-for=\"(item, idx) in contents\" :key=\"idx\">{{ item }}</li>\n      </ul> -->\n      <v-chart style=\"width:100%;height: 800px;\" :options=\"chartOption\" autoresize />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { get_all_types } from \"@/api/job\";\nimport { dash3 } from \"@/api/job\";\n\nexport default {\n  name: '',\n  props: {\n    selectRangeDate: Array,\n    _width: Number\n  },\n  data() {\n    return {\n      activeName: '0',\n      types: [],\n      contents: [],\n      words: [],\n      data: [],\n      chartOption: {},\n      maskImage: new Image(),\n    }\n  },\n  async mounted() {\n    // await getWordCut().then(res => {\n    //   this.words = res.data.data\n    // }),\n    // 获取所有分类名称\n    await this.getAllTypes();\n    // 默认加载第一个分类的数据\n    if (this.types.length > 0) {\n      await this.fetchData(this.types[0]);\n    }\n\n    this.maskImage.src = require('@/assets/zl.png')\n  },\n  methods: {\n    initChart() {\n      this.loadData()\n      setTimeout(() => {\n        this.chartOption = this.buildChartOption();\n      }, 500)\n    },\n    loadData() {\n      this.data = []\n      for (var name in this.words) {\n        this.data.push({\n          name: name,\n          value: Math.sqrt(this.words[name])\n        })\n      }\n    },\n    handleClick() {\n      this.fetchData(this.types[this.activeName])\n    },\n    async getAllTypes() {\n      await get_all_types().then(res => {\n        this.types = res.data.types;\n      })\n    },\n    async fetchData(typeName) {\n      // 根据选择的分类名称调用后台方法获取数据\n      await dash3(typeName).then(res => {\n        const data = res.data;\n        this.contents = data.contents;\n        data.contents.forEach((item) => {\n          this.words[item] = Math.floor(Math.random() * 100) + 1\n        })\n      })\n      await this.initChart()\n    },\n    buildChartOption() {\n      const option = {\n        tooltip: {},\n        series: [{\n          maskImage: this.maskImage,\n          type: 'wordCloud',\n          gridSize: 2,\n          sizeRange: [10, 50],\n          rotationRange: [-90, 90],\n          shape: 'pentagon',\n          width: 900,\n          height: 900,\n          drawOutOfBound: false,\n          textStyle: {\n            normal: {\n              textBorderColor: 'rgba(255,255,255,0.3)',\n              textBorderWidth: 1,\n              color: () => {\n                return 'rgb(' + [\n                  Math.round(Math.random() * 160),\n                  Math.round(Math.random() * 160),\n                  Math.round(Math.random() * 160)\n                ].join(',') + ')';\n              }\n            },\n            emphasis: {\n              fontSize: 20,\n              shadowBlur: 10,\n              shadowColor: 'rgba(255,255,255, .1)'\n            }\n          },\n          data: this.data\n        }]\n      };\n\n      return option;\n    },\n  },\n}\n</script>\n\n\n<style lang=\"less\" scoped>\n/deep/ .el-tabs {\n  .el-tabs__item {\n    color: #fff;\n  }\n}\n\n.content-wrap {\n  min-height: 70vh;\n  background: url('../../../../assets/images/gw-bg.png');\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  position: relative;\n\n  .mask {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(43, 49, 66, 0.95);\n  }\n}\n\n.type-child-list {\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 9;\n\n  .typeItem {\n    margin: 30px 30px 0px 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: #fff;\n    background: rgba(22, 25, 38, 0.5);\n    padding: 8px 20px;\n    border-radius: 15px;\n  }\n}\n</style>\n"]}]}
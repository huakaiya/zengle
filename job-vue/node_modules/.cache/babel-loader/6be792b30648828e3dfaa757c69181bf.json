{"remainingRequest":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\src\\views\\Charts\\Dash1\\charts\\LeftChart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\src\\views\\Charts\\Dash1\\charts\\LeftChart.vue","mtime":1647076238000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1x1NjZGRVx1NEU1MC9EZXNrdG9wL0JJU0hFIDIvQklTSEUvam9iLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGdldENpdHlKb2IyIH0gZnJvbSAiLi4vLi4vLi4vLi4vYXBpL2pvYiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmFzZUxpbmVDaGFydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uOiB7fSwKICAgICAgZGF0YXM6IFtdLAogICAgICBsYWJlbHM6IFtdLAogICAgICBkYXRhOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0Q2l0eUpvYjIoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIF90aGlzLmRhdGFzID0gcmVzLmRhdGEuZGF0YS5tYXAoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGkudmFsdWU7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzLmxhYmVscyA9IHJlcy5kYXRhLmRhdGEubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBpLm5hbWU7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzLmRhdGEgPSByZXMuZGF0YS5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMuZGF0YSk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX3RoaXMuY2hhcnRPcHRpb24gPSBfdGhpcy5idWlsZENoYXJ0T3B0aW9uKCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBidWlsZENoYXJ0T3B0aW9uOiBmdW5jdGlvbiBidWlsZENoYXJ0T3B0aW9uKCkgewogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIC8vIGJhY2tncm91bmRDb2xvcjogJyMzOTQwNTYnLAogICAgICAgIHRpdGxlOiBbLy8gewogICAgICAgICAgLy8gICB0ZXh0OiAn44CQ5Lqk5piT56yU5pWw5YiG5p6Q44CRJywKICAgICAgICAgIC8vICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAvLyAgICAgZm9udFNpemU6IDEyLAogICAgICAgICAgLy8gICAgIGNvbG9yOiAnIzc1ZGVlZicsCiAgICAgICAgICAvLyAgICAgZm9udFdlaWdodDogJ25vcm1hbCcKICAgICAgICAgIC8vICAgfSwKICAgICAgICAgIC8vICAgdG9wOiAnMjQlJywKICAgICAgICAgIC8vICAgbGVmdDogJzIwJScKICAgICAgICAgIC8vIH0sCiAgICAgICAgICAvLyB7CiAgICAgICAgICAvLyAgIHRleHQ6ICfjgJDkuqTmmJPph5Hpop3liIbmnpDjgJEnLAogICAgICAgICAgLy8gICB0ZXh0U3R5bGU6IHsKICAgICAgICAgIC8vICAgICBmb250U2l6ZTogMTIsCiAgICAgICAgICAvLyAgICAgY29sb3I6ICcjNzVkZWVmJywKICAgICAgICAgIC8vICAgICBmb250V2VpZ2h0OiAnbm9ybWFsJwogICAgICAgICAgLy8gICB9LAogICAgICAgICAgLy8gICB0b3A6ICcyNCUnLAogICAgICAgICAgLy8gICByaWdodDogJzEyJScKICAgICAgICAgIC8vIH0sCiAgICAgICAgXSwKICAgICAgICBncmlkOiBbewogICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICBsZWZ0OiAnMiUnLAogICAgICAgICAgdG9wOiAnMTElJywKICAgICAgICAgIHJpZ2h0OiAnMiUnLAogICAgICAgICAgYm90dG9tOiAnNjAlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sIHsKICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgbGVmdDogJzIlJywKICAgICAgICAgIHRvcDogIjU1JSIsCiAgICAgICAgICBib3R0b206ICcxMCUnLAogICAgICAgICAgcmlnaHQ6ICcyJScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9XSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIHR5cGU6ICdzY3JvbGwnLAogICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IDEwLAogICAgICAgICAgICBjb2xvcjogJyNFQ0VGRjEnCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnbGluZScKICAgICAgICAgIH0gLy8gZm9ybWF0dGVyOiAocGFyYW1zKSA9PnsKICAgICAgICAgIC8vICAgY29uc29sZS5sb2cocGFyYW1zKQogICAgICAgICAgLy8gICByZXR1cm4gcGFyYW1zCiAgICAgICAgICAvLyB9CgogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgLy8gZGF0YTogWydNb24nLCAnVHVlJywgJ1dlZCcsICdUaHUnLCAnRnJpJywgJ1NhdCcsICdTdW4nXSwKICAgICAgICAgIGRhdGE6IHRoaXMubGFiZWxzLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIGludGVydmFsOiAwLAogICAgICAgICAgICByb3RhdGU6IDQwCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNzg5MDlDJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNzg5MDlDJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+aJgOacieexu+WeiycsCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGFzLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAnI0IzODhGRicKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAn5omA5pyJ57G75Z6LJywKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiBbJzIwJScsICczMCUnXSwKICAgICAgICAgIGNlbnRlcjogWyc1MCUnLCAnNzAlJ10sCiAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgZm9udFNpemU6ICc0MCcsCiAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6IGZ1bmN0aW9uIGNvbG9yKHBhcmFtcykgewogICAgICAgICAgICAgIHZhciBjb2xvckxpc3QgPSBbJyNGM0U1RjUnLCAnI0UxQkVFNycsICcjQ0U5M0Q4JywgJyNCQTY4QzgnLCAnIzhFMjRBQScsICcjNkExQjlBJywgJyM0QTE0OEMnXTsKICAgICAgICAgICAgICByZXR1cm4gY29sb3JMaXN0W3BhcmFtcy5kYXRhSW5kZXhdOwogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbExpbmU6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEsCiAgICAgICAgICB4QXhpc0luZGV4OiAxLAogICAgICAgICAgeUF4aXNJbmRleDogMQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHJldHVybiBvcHRpb247CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["LeftChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-chart\n      style=\"width:100%;\"\n      :options=\"chartOption\"\n      autoresize\n  />\n</template>\n\n<script>\nimport {getCityJob2} from \"../../../../api/job\";\n\nexport default {\n  name: 'BaseLineChart',\n  data() {\n    return {\n      chartOption: {},\n      datas: [],\n      labels: [],\n      data : [],\n    };\n  },\n  async mounted() {\n    await getCityJob2().then(res => {\n      this.datas = res.data.data.map(i => i.value)\n      this.labels = res.data.data.map(i => i.name)\n      this.data = res.data.data\n      console.log(this.data);\n    })\n    this.chartOption = this.buildChartOption();\n  },\n  methods: {\n    buildChartOption() {\n      const option = {\n        // backgroundColor: '#394056',\n        title: [\n          // {\n          //   text: '【交易笔数分析】',\n          //   textStyle: {\n          //     fontSize: 12,\n          //     color: '#75deef',\n          //     fontWeight: 'normal'\n          //   },\n          //   top: '24%',\n          //   left: '20%'\n          // },\n          // {\n          //   text: '【交易金额分析】',\n          //   textStyle: {\n          //     fontSize: 12,\n          //     color: '#75deef',\n          //     fontWeight: 'normal'\n          //   },\n          //   top: '24%',\n          //   right: '12%'\n          // },\n        ],\n        grid: [\n          {\n            show: false,\n            left: '2%',\n            top: '11%',\n            right: '2%',\n            bottom: '60%',\n            containLabel: true,\n          },\n          {\n            show: false,\n            left: '2%',\n            top: \"55%\",\n            bottom: '10%',\n            right: '2%',\n            containLabel: true,\n          },\n        ],\n        legend: {\n          type: 'scroll',\n          show: false,\n          textStyle: {\n            fontSize: 10,\n            color: '#ECEFF1',\n          },\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'line',\n          },\n          // formatter: (params) =>{\n          //   console.log(params)\n          //   return params\n          // }\n        },\n        xAxis: [{\n          type: 'category',\n          // data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          data: this.labels,\n          axisLabel: {\n            interval:0,\n            rotate:40\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        }\n        ],\n        yAxis: [{\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        }\n        ],\n        series: [\n          {\n            name: '所有类型',\n            data: this.datas,\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#B388FF',\n            },\n          },\n          {\n            name: '所有类型',\n            type: 'pie',\n            radius: ['20%', '30%'],\n            center: ['50%', '70%'],\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '40',\n                fontWeight: 'bold'\n              }\n            },\n            itemStyle: {\n              color: function (params) {\n                var colorList = ['#F3E5F5', '#E1BEE7', '#CE93D8', '#BA68C8', '#8E24AA','#6A1B9A','#4A148C'];\n                return colorList[params.dataIndex];\n              },\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: this.data,\n            xAxisIndex: 1,\n            yAxisIndex: 1,\n          }\n        ],\n      };\n      return option;\n    },\n  }\n};\n</script>\n<style>\n/**\n * 默认尺寸为 600px×400px，如果想让图表响应尺寸变化，可以像下面这样\n * 把尺寸设为百分比值（同时请记得为容器设置尺寸）。\n */\n</style>\n"],"sourceRoot":"src/views/Charts/Dash1/charts"}]}
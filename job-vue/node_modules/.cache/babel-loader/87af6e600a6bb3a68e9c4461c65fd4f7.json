{"remainingRequest":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\src\\views\\Charts\\Dash3\\WordCloud.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\src\\views\\Charts\\Dash3\\WordCloud.vue","mtime":1710938895256},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\曾乐\\Desktop\\BISHE 2\\BISHE\\job-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1x1NjZGRVx1NEU1MC9EZXNrdG9wL0JJU0hFIDIvQklTSEUvam9iLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCmltcG9ydCB7IGdldFdvcmRDdXQgfSBmcm9tICIuLi8uLi8uLi9hcGkvam9iIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQbG90QmFyQ2hhcnQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydE9wdGlvbjoge30sCiAgICAgIG1hc2tJbWFnZTogbmV3IEltYWdlKCksCiAgICAgIGRhdGE6IFtdLAogICAgICB3b3JkczogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0V29yZEN1dCgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YSwgMTExMTExKTsKICAgICAgICAgICAgICAgIF90aGlzLndvcmRzID0gcmVzLmRhdGEuZGF0YTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy5sb2FkRGF0YSgpOwoKICAgICAgICAgICAgICBfdGhpcy5tYXNrSW1hZ2Uuc3JjID0gcmVxdWlyZSgnQC9hc3NldHMvemwucG5nJyk7CiAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5jaGFydE9wdGlvbiA9IF90aGlzLmJ1aWxkQ2hhcnRPcHRpb24oKTsKICAgICAgICAgICAgICB9LCA1MDApOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgbG9hZERhdGE6IGZ1bmN0aW9uIGxvYWREYXRhKCkgewogICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMud29yZHMpIHsKICAgICAgICB0aGlzLmRhdGEucHVzaCh7CiAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgdmFsdWU6IE1hdGguc3FydCh0aGlzLndvcmRzW25hbWVdKQogICAgICAgIH0pOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEsIDIyMjIyMik7CiAgICB9LAogICAgYnVpbGRDaGFydE9wdGlvbjogZnVuY3Rpb24gYnVpbGRDaGFydE9wdGlvbigpIHsKICAgICAgdmFyIG9wdGlvbiA9IHsKICAgICAgICB0b29sdGlwOiB7fSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBtYXNrSW1hZ2U6IHRoaXMubWFza0ltYWdlLAogICAgICAgICAgdHlwZTogJ3dvcmRDbG91ZCcsCiAgICAgICAgICBncmlkU2l6ZTogMiwKICAgICAgICAgIHNpemVSYW5nZTogWzEwLCA1MF0sCiAgICAgICAgICByb3RhdGlvblJhbmdlOiBbLTkwLCA5MF0sCiAgICAgICAgICBzaGFwZTogJ3BlbnRhZ29uJywKICAgICAgICAgIHdpZHRoOiA5MDAsCiAgICAgICAgICBoZWlnaHQ6IDkwMCwKICAgICAgICAgIGRyYXdPdXRPZkJvdW5kOiBmYWxzZSwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICB0ZXh0Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LDAuMyknLAogICAgICAgICAgICAgIHRleHRCb3JkZXJXaWR0aDogMSwKICAgICAgICAgICAgICBjb2xvcjogZnVuY3Rpb24gY29sb3IoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJ3JnYignICsgW01hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCldLmpvaW4oJywnKSArICcpJzsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgZm9udFNpemU6IDIwLAogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgyNTUsMjU1LDI1NSwgLjEpJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogdGhpcy5kYXRhCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgcmV0dXJuIG9wdGlvbjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["WordCloud.vue"],"names":[],"mappings":";;;;;;;AAKA,SAAA,UAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,IAAA,KAAA,EAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAWA,EAAA,OAXA,qBAWA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,UAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,eAHA,CADA;;AAAA;AAMA,cAAA,KAAA,CAAA,QAAA;;AACA,cAAA,KAAA,CAAA,SAAA,CAAA,GAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AACA,cAAA,UAAA,CAAA,YAAA;AACA,gBAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAAA,gBAAA,EAAA;AACA,eAFA,EAEA,GAFA,CAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,IAAA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AAFA,SAAA;AAIA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,IAAA,EAAA,MAAA;AACA,KATA;AAUA,IAAA,gBAVA,8BAUA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,SAAA,EAAA,KAAA,SADA;AAEA,UAAA,IAAA,EAAA,WAFA;AAGA,UAAA,QAAA,EAAA,CAHA;AAIA,UAAA,SAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAJA;AAKA,UAAA,aAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CALA;AAMA,UAAA,KAAA,EAAA,UANA;AAOA,UAAA,KAAA,EAAA,GAPA;AAQA,UAAA,MAAA,EAAA,GARA;AASA,UAAA,cAAA,EAAA,KATA;AAUA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,eAAA,EAAA,uBADA;AAEA,cAAA,eAAA,EAAA,CAFA;AAGA,cAAA,KAAA,EAAA,iBAAA;AACA,uBAAA,SAAA,CACA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CADA,EAEA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAFA,EAGA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAHA,EAIA,IAJA,CAIA,GAJA,CAAA,GAIA,GAJA;AAKA;AATA,aADA;AAYA,YAAA,QAAA,EAAA;AACA,cAAA,QAAA,EAAA,EADA;AAEA,cAAA,UAAA,EAAA,EAFA;AAGA,cAAA,WAAA,EAAA;AAHA;AAZA,WAVA;AA4BA,UAAA,IAAA,EAAA,KAAA;AA5BA,SAAA;AAFA,OAAA;AAkCA,aAAA,MAAA;AACA;AA9CA;AAvBA,CAAA","sourcesContent":["<template>\n  <v-chart style=\"width:100%;height: 800px;\" :options=\"chartOption\" autoresize />\n</template>\n\n<script>\nimport { getWordCut } from \"../../../api/job\";\n\nexport default {\n  name: 'PlotBarChart',\n  data() {\n    return {\n      chartOption: {},\n      maskImage: new Image(),\n      data: [],\n      words: null\n    };\n  },\n\n  async mounted() {\n    await getWordCut().then(res => {\n      console.log(res.data.data, 111111)\n      this.words = res.data.data\n    })\n\n    this.loadData()\n    this.maskImage.src = require('@/assets/zl.png')\n    setTimeout(() => {\n      this.chartOption = this.buildChartOption();\n    },500)\n  },\n  methods: {\n    loadData() {\n      for (var name in this.words) {\n        this.data.push({\n          name: name,\n          value: Math.sqrt(this.words[name])\n        })\n      }\n      console.log(this.data, 222222)\n    },\n    buildChartOption() {\n      const option = {\n        tooltip: {},\n        series: [{\n          maskImage: this.maskImage,\n          type: 'wordCloud',\n          gridSize: 2,\n          sizeRange: [10, 50],\n          rotationRange: [-90, 90],\n          shape: 'pentagon',\n          width: 900,\n          height: 900,\n          drawOutOfBound: false,\n          textStyle: {\n            normal: {\n              textBorderColor: 'rgba(255,255,255,0.3)',\n              textBorderWidth: 1,\n              color: () => {\n                return 'rgb(' + [\n                  Math.round(Math.random() * 160),\n                  Math.round(Math.random() * 160),\n                  Math.round(Math.random() * 160)\n                ].join(',') + ')';\n              }\n            },\n            emphasis: {\n              fontSize: 20,\n              shadowBlur: 10,\n              shadowColor: 'rgba(255,255,255, .1)'\n            }\n          },\n          data: this.data\n        }]\n      };\n\n      return option;\n    },\n  }\n};\n</script>\n"],"sourceRoot":"src/views/Charts/Dash3"}]}